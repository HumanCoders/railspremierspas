---
layout: default
title: Développez votre application
permalink: app
---

# Développez votre application

*Créé par Vesa Vänskä, [@vesan](https://twitter.com/vesan)*
      
[**First, make sure you installed Rails, otherwise please follow this link.**](/install)


## Étape 0: Get to know the tools

* Texteditor: (Gedit, Vim, Emacs, Komodo Edit, Sublime Text) are examples of texteditors your can use for writing code and editing files.
* Terminal / Command Prompt is where you start the rails server and run commands.
* Web browser (Firefox, Safari, Chrome) are for viewing your application.


## Étape 1: Créer l'application

Vous allez créer une application appelée railsgirls.

Ouvrez le Terminal / Ligne de commande :

* OS X: Ouvrez Spotlight, tapez *Terminal* et cliquez sur l'option *Terminal* qui vient d'apparaitre.
* Windows: Cliquez sur le menu Démarrer et cherchez "Command Prompt" et cliquez sur *Command Prompt with Ruby on Rails*.

Tapez les commandes:

{% highlight sh %}
mkdir projects
cd projects
rails new railsgirls
cd railsgirls
rails s
{% endhighlight %}

Ouvrez [http://localhost:3000](http://localhost:3000) dans votre navigateur.

CTRL-C pour quitter le serveur dans le Terminal/Ligne de commande.

**Coach:** Quick explanation about what each command does. What was generated? What does the server do. Talk about MVC.

## 2: Créer le scaffold Idea

Vous allez utiliser les scaffolds de Rails pour générer un point de départ qui vous permettra de lister, ajouter, supprimer, éditer et voir des choses ; dans notre cas, des idées (Idea).

**Coach:** What is a scaffold (1. the command, 2. the model name and related db table; pluralization/naming conventions, 3. attributes and types)? What are migrations and when do you need to do them, why?

{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
rails s
{% endhighlight %}

Ouvrez [http://localhost:3000/ideas](http://localhost:3000/ideas) dans votre navigateur.

CTRL-C exits the server when you have clicked around for a little.

## Étape 3: Design

**Coach:** Talk about the relationship of HTML and Rails; what part of views is HTML and what is Embedded Ruby (ERB)? How does this relate to MVC (models and controllers control the logic of dynamically generating HTML, or views)?

Le design n'est pas très beau. Essayons de faire quelque chose pour changer ça. Nous utiliserons le projet Twitter Bootstrap pour mettre un style par défaut plus joli facilement.

Ouvrez app/views/layouts/application.html.erb et ajouter au-dessus de

{% highlight erb %}
<%= stylesheet_link_tag "application" %>
{% endhighlight %}

la ligne

{% highlight erb %}
<link rel="stylesheet" href="http://railsgirls.com/assets/bootstrap.css">
{% endhighlight %}

et remplacez

{% highlight erb %}
<%= yield %>
{% endhighlight %}

par

{% highlight erb %}
<div class="container">
    <%= yield %>
</div>
{% endhighlight %}

Let&#8217;s also add topbar and footer to the layout and style those and the ideas table.

Dans application.html.erb sous `<body>` ajoutez :

{% highlight html %}
<div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="brand" href="/">The Idea app</a>
            <ul class="nav">
                <li class="active"><a href="/ideas">Ideas</a></li>
            </ul>
        </div>
    </div>
</div>
{% endhighlight %}

et avant `</body>` ajoutez :

{% highlight html %}
<footer>
    <div class="container">
        Rails Girls 2012
    </div>
</footer>
{% endhighlight %}

Ouvrez app/assets/stylesheets/application.css et ajoutez à la fin :

{% highlight css %}
#logo { 
    font-size: 20px;
    font-family: &quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif;
    float: left;
    padding: 10px;
}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle !important; border: none !important; }
th { border-bottom: 1px solid #DDD !important; }
td.picture { width: 140px; }
td.picture img { width: 140px; }
{% endhighlight %}

**Coach:** Talk a little about CSS and layouts.

## 4: Ajout de l'upload d'images

Vous avez besoin d'installer une bibliothèque pour l'upload d'image.

Ouvrez Gemfile dans le projet et ajoutez

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

sous

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

**Coach:** Tell what libraries are and why they are used. Maybe few words about Open Source?

Maintenant, générez le code pour nécessaire à l'upload les images. Dans le Terminal/Ligne de commande, lancez :

{% highlight sh %}
bundle
rails generate uploader Picture
{% endhighlight %}

Ouvrez app/models/idea.rb et ajoutez

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

sous la ligne

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

Dans app/views/ideas/_form.html.erb, remplacez

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

par

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

et

{% highlight erb %}
<%= form_for(@idea) do |f| %>
{% endhighlight %}

par

{% highlight erb %}
<%= form_for(@idea, :html => {:multipart => true}) do |f| %>
{% endhighlight %}

La vue n'est pas jolie, elle affiche seulement le chemin vers le fichier. Changez ça

Ouvrez app/views/ideas/show.html.erb et remplacez

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

par

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}

**Coach:** Talk a little about HTML.

## 5: Modifiez les routes

Si vous essayez d'ouvrir [http://localhost:3000](http://localhost:3000), vous verrez que cela affiche toujours la page par défaut. Faites en sorte que cela redirige vers la page des idées.

Sur OS X et Linux, dans le Terminal, lancez :

{% highlight sh %}
rm public/index.html
{% endhighlight %}

Sur Windows, dans la Ligne de commande, lancez :

{% highlight bat %}
del public\index.html
{% endhighlight %}

Enfin, ouvrez config/routes.rb et ajoutez à la seconde ligne du fichier :

{% highlight ruby %}
root :to => redirect("/ideas")
{% endhighlight %}

## Allez plus loin

* Ajoutez un design en utilisant HTML et CSS
* Ajoutez la possibiliter de voter
* Utilisez CoffeeScript (ou JavaScript) pour ajouter des interactions
* Ajouter un redimensionnement d'image pour qu'elles chargent plus vite
      

## Guides additionnels

* GUIDE 1: [Ajoutez des commentaires par Janika Liiv](http://janikaliiv.eu/homework/) (en)
* GUIDE 2: [Déployez votre application sur Heroku par Terence Lee](./heroku)
* GUIDE 3: [Build a map of workshop participants by Rails Girls Berlin](http://blog.railsgirlsberlin.de/apptutorial/)
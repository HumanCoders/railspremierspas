---
layout: default
title: Développez votre application
permalink: app.html
---

# Développez votre application

*Créé par Vesa Vänskä, [@vesan](https://twitter.com/vesan)*
      
[**Installer Rails**](/install)


## 0: Prenez connaissance des outils

* L'éditeur de texte (Komodo Edit) pour écrire du code et éditer les fichiers
* Terminal / Ligne de commande pour démarrer le serveur Rails et lancer des commandes
* Le navigateur web pour visualiser vos applications


## 1: Créer l'application

Vous allez créer une application appelée railsgirls.

Ouvrez le Terminal / Ligne de commande :

* OS X: Ouvrez Spotlight, tapez *Terminal* et cliquez sur l'option *Terminal* qui vient d'apparaitre.
* Windows: Cliquez sur le menu Démarrer et cherchez "Command Prompt" et cliquez sur *Command Prompt with Ruby on Rails*.

Tapez les commandes:

{% highlight sh %}
mkdir projects
cd projects
rails new railsgirls
cd railsgirls
rails s
{% endhighlight %}

Ouvrez [http://localhost:3000](http://localhost:3000) dans votre navigateur.

CTRL-C pour quitter le serveur dans le Terminal/Ligne de commande.


## 2: Créer le scaffold Idea

Vous allez utiliser les scaffolds de Rails pour générer un point de départ qui vous permettrade lister, ajouter, supprimer, éditer et voir des choses ; dans notre cas, des idées (Idea).

{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
rails s
{% endhighlight %}

Ouvrez [http://localhost:3000](http://localhost:3000) dans votre navigateur.

CTRL-C pour quitter le serveur une fois que vous avez cliqué un peu partout.


## 3: Design

Le design n'est pas très beau. Essayons de faire quelque chose pour changer ça. Nous utiliserons le projet Twitter Bootstrap pour mettre un style par défaut plus joli facilement.

Ouvrez app/views/layouts/application.html.erb et ajouter au-dessus de

{% highlight erb %}
<%= stylesheet_link_tag "application" %>
{% endhighlight %}

la ligne

{% highlight erb %}
<link rel="stylesheet" href="http://railsgirls.com/assets/bootstrap.css">
{% endhighlight %}

et remplacez

{% highlight erb %}
<%= yield %>
{% endhighlight %}

par

{% highlight erb %}
<div class="container">
    <%= yield %>
</div>
{% endhighlight %}

Ajoutez la barre de menu et le footer à la page et stylez-les.


Dans application.html.erb sous `<body>` ajoutez :

{% highlight html %}
<div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="brand" href="/">The Idea app</a>
            <ul class="nav">
                <li class="active"><a href="/ideas">Ideas</a></li>
            </ul>
        </div>
    </div>
</div>
{% endhighlight %}

et avant `</body>` ajoutez :

{% highlight html %}
<footer>
    <div class="container">
        Rails Girls 2012
    </div>
</footer>
{% endhighlight %}

Ouvrez app/assets/stylesheets/application.css et ajoutez à la fin :

{% highlight css %}
#logo { 
    font-size: 20px;
    font-family: &quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif;
    float: left;
    padding: 10px;
}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle !important; border: none !important; }
th { border-bottom: 1px solid #DDD !important; }
td.picture { width: 140px; }
td.picture img { width: 140px; }
{% endhighlight %}


## 4: Ajout de l'upload d'images

Vous avez besoin d'installer un bibliothèque pour le traitement d'image.


Ouvrez Gemfile dans le projet et ajoutez

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

sous

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

Maintenant, générez le code pour manipuler les images. Dans le Terminal/Ligne de commande, lancez :

{% highlight sh %}
bundle
rails generate uploader Picture
{% endhighlight %}

Ouvrez app/models/idea.rb et ajoutez

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

sous la ligne

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

Dans app/views/ideas/_form.html.erb, remplacez

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

par

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

et

{% highlight erb %}
<%= form_for(@idea) do |f| %>
{% endhighlight %}

par

{% highlight erb %}
<%= form_for(@idea, :html => {:multipart => true}) do |f| %>
{% endhighlight %}

La vue n'est pas jolie, elle affiche seulement le chemin vers le fichier. Changez ça

Ouvrez app/views/ideas/show.html.erb et remplacez

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

par

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}


## 5: Modifiez les routes

Si vous essayez d'ouvrir [http://localhost:3000](http://localhost:3000), vous verrez que cela affiche toujours la page par défaut. Faites en sorte que cela redirige vers la page des idées.

Sur OS X et Linux, dans le Terminal, lancez :

{% highlight sh %}
rm public/index.html
{% endhighlight %}

Sur Windows, dans la Ligne de commande, lancez :

{% highlight bat %}
del public\index.html
{% endhighlight %}

Enfin, ouvrez config/routes.rb et ajoutez à la seconde ligne du fichier :

{% highlight ruby %}
root :to => redirect("/ideas")
{% endhighlight %}


## Allez plus loin

* Ajoutez un design en utilisant HTML et CSS
* Ajoutez la possibiliter de voter
* Utilisez CoffeeScript (ou JavaScript) pour ajouter des interactions
* Ajouter un redimensionnement d'image pour qu'elles chargent plus vite
      

## Guides additionnels

* GUIDE 1: [Déployez votre application sur Heroku par Terence Lee](/heroku)
* GUIDE 2: [Ajoutez des commentaires par Janika Liiv](http://janikaliiv.eu/homework/) (en)
